
分子酶切及拼接分析
====================================

本程序所有代码及案例文件

-  链接：https://pan.baidu.com/s/1ESx8BKCNvMAooIDLDH9mXw

-  提取码：zfbd

酶切分析
--------------------------------

读入数据
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

::

   % 读入PCR正链序列

   PCR='ACCACCATGGATGAAAATTAGACCACTTGGTGACAGAGTTGTTATTAAAAGATTAGAGGCAGAGGAGACTACTAAGAGCGGTATAGTATTACCTAGCTCAGCTAAAGAGAAACCTCAAATGGCAGAAGTTGTTGCAGTAGGTCCTGGTGGAGTTGTAGATGGCAAAGAAATTCAAATGCAAGTAAAGACAGGAGATAAAGTATTTTTCTCCAAATACAGTGGAACAGAAATAAAAGTTGACAATGAAGAATTGTTAATTTTAAGACAGGACGATATTTTAGGAATTGTAGAAGAATAAGCTATCAATTTTGTTAATAATTCAGGGAGGGATTCTAAATGGCAAAGCAAATATTATACGGAGAAGAAGCAAGAAGATCTATGCAAAAGGGCGTAGACAAACTTGCTGATACTGTTAAGGTTACTCTTGGACCAAAAGGAAGAAATGTTGTTTTAGATAAAAAATTTGGAGCACCACTTATAACAAATGATGGTGTAAGTATAGCAAAAGAAATAGAACTTGAAGATCCATATGAAAATATGGGTGCACAACTTGTTAAGGAAGTTGCAACTAAGACTAATGATGTAGCAGGAGACGGAACTACTACAGCAACACTTCTTGCACAAGCAATAATAAGAGAAGGACTTAAAAATGTTACAGCTGGAGCTAATCCAATGCTTATAAGAAATGGAATAAGATTAGCTGTAGATAAGACTGTTGAAGGACTTAAGAAAGTATCAAAGAATGTTAACGGAAAAGAAGATATAGCAAGAGTTGCATCAATTTCAGCAGCAGATCCTGAAATAGGAAAATTAATAGCTGATGCTATGGAGAAAGTAGGCAACGAAGGAGTTATAACTGTTGAAGAATCAAAATCAATGGGAACAGAACTTGATGTTGTTGAAGGTATGCAATTTGATAGAGGATATTTAAGCCCATACATGGTAACAGATCAAGAGAAAATGGAAGCTGTACTTGATGATCCATATATATTAATAACAGACAAGAAAATTGCAAATATACAAGAAATTCTTCCACTTCTTGAGCAGATAGTTCAACAGGGTAAAAAATTACTTATAATTGCTGATGATGTTGAAGGCGAAGCTTTAGCTACATTGGTTGTTAACAAATTAAGAGGAACATTTAACTGTGTTGCTGTTAAAGCTCCTGGATTTGGCGATAGAAGAAAAGATATGTTAAGAGACATAGCAATCCTTACAGGTGGAGAAGTTATATCAGAAGAGCTTGGAAAAGATCTTAAAGATGTAAAGGTTGAGGATCTTGGAAGTGCTGAAAGCGTTAAAATATCAAAAGAAAATACTACAATAGTAAATGGAAGAGGCGACAAGAGCGCAATCCATGACAGAGTTGCGCAAATAAGAGGTCAAATAGAAGAAACTACATCTGACTTTGATAGAGAAAAATTACAAGAAAGATTAGCAAAACTTGCTGGTGGAGTTGCAGTTGTTAAAGTTGGAGCTGCTTCAGAAACTGAATTAAAAGAGAGAAAAATGAGAATTGAAGATGCTCTTGCAGCTACAAAAGCAGCAGTTGAAGAAGGTATAATTGCTGGTGGTGGTACTGCTTACATCAATGTATTACCAGAAGTAAGAGAATTGACTTCAGACGAACCAGATGTTCAAGTTGGTATAAATATAATAGTTAAGGCTCTTGAAGAACCAGTAAGACAAATAGCTGCAAATGCAGGTCTTGAGGGATCAGTAATAATAGAAAAAATTATAAACAGTGAAAAAGGAATTGGATTTGATGCATTACATGAGAAATATGTTGATATGCTAAGTGTTGGAATTGTTGATCCAACTAAGGTTACAAGATCAGCACTTCAAAATGCGGCATCAGTTGCTTCAACATTCCTTACAACTGAGTGCGCTGTAGCAGATATTCCTGAAAAAGATAAACCTGAAATGCCAGGTGGAGCACCAGGAATGGGAATGGGCGGAATGTACTAAGGATCCTGGT'

   PCR =
   'ACCACCATGGATGAAAATTAGACCACTTGGTGACAGAGTTGTTATTAAAAGATTAGAGGCAGAGGAGACTACTAAGAGCGGTATAGTATTACCTAGCTCAGCTAAAGAGAAACCTCAAATGGCAGAAGTTGTTGCAGTAGGTCCTGGTGGAGTTGTAGATGGCAAAGAAATTCAAATGCAAGTAAAGACAGGAGATAAAGTATTTTTCTCCAAATACAGTGGAACAGAAATAAAAGTTGACAATGAAGAATTGTTAATTTTAAGACAGGACGATATTTTAGGAATTGTAGAAGAATAAGCTATCAATTTTGTTAATAATTCAGGGAGGGATTCTAAATGGCAAAGCAAATATTATACGGAGAAGAAGCAAGAAGATCTATGCAAAAGGGCGTAGACAAACTTGCTGATACTGTTAAGGTTACTCTTGGACCAAAAGGAAGAAATGTTGTTTTAGATAAAAAATTTGGAGCACCACTTATAACAAATGATGGTGTAAGTATAGCAAAAGAAATAGAACTTGAAGATCCATATGAAAATATGGGTGCACAACTTGTTAAGGAAGTTGCAACTAAGACTAATGATGTAGCAGGAGACGGAACTACTACAGCAACACTTCTTGCACAAGCAATAATAAGAGAAGGACTTAAAAATGTTACAGCTGGAGCTAATCCAATGCTTATAAGAAATGGAATAAGATTAGCTGTAGATAAGACTGTTGAAGGACTTAAGAAAGTATCAAAGAATGTTAACGGAAAAGAAGATATAGCAAGAGTTGCATCAATTTCAGCAGCAGATCCTGAAATAGGAAAATTAATAGCTGATGCTATGGAGAAAGTAGGCAACGAAGGAGTTATAACTGTTGAAGAATCAAAATCAATGGGAACAGAACTTGATGTTGTTGAAGGTATGCAATTTGATAGAGGATATTTAAGCCCATACATGGTAACAGATCAAGAGAAAATGGAAGCTGTACTTGATGATCCATATATATTAATAACAGACAAGAAAATTGCAAATATACAAGAAATTCTTCCACTTCTTGAGCAGATAGTTCAACAGGGTAAAAAATTACTTATAATTGCTGATGATGTTGAAGGCGAAGCTTTAGCTACATTGGTTGTTAACAAATTAAGAGGAACATTTAACTGTGTTGCTGTTAAAGCTCCTGGATTTGGCGATAGAAGAAAAGATATGTTAAGAGACATAGCAATCCTTACAGGTGGAGAAGTTATATCAGAAGAGCTTGGAAAAGATCTTAAAGATGTAAAGGTTGAGGATCTTGGAAGTGCTGAAAGCGTTAAAATATCAAAAGAAAATACTACAATAGTAAATGGAAGAGGCGACAAGAGCGCAATCCATGACAGAGTTGCGCAAATAAGAGGTCAAATAGAAGAAACTACATCTGACTTTGATAGAGAAAAATTACAAGAAAGATTAGCAAAACTTGCTGGTGGAGTTGCAGTTGTTAAAGTTGGAGCTGCTTCAGAAACTGAATTAAAAGAGAGAAAAATGAGAATTGAAGATGCTCTTGCAGCTACAAAAGCAGCAGTTGAAGAAGGTATAATTGCTGGTGGTGGTACTGCTTACATCAATGTATTACCAGAAGTAAGAGAATTGACTTCAGACGAACCAGATGTTCAAGTTGGTATAAATATAATAGTTAAGGCTCTTGAAGAACCAGTAAGACAAATAGCTGCAAATGCAGGTCTTGAGGGATCAGTAATAATAGAAAAAATTATAAACAGTGAAAAAGGAATTGGATTTGATGCATTACATGAGAAATATGTTGATATGCTAAGTGTTGGAATTGTTGATCCAACTAAGGTTACAAGATCAGCACTTCAAAATGCGGCATCAGTTGCTTCAACATTCCTTACAACTGAGTGCGCTGTAGCAGATATTCCTGAAAAAGATAAACCTGAAATGCCAGGTGGAGCACCAGGAATGGGAATGGGCGGAATGTACTAAGGATCCTGGT'

对片段进行酶切
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

restrict_xia是matlab自带函数restrict的升级版，用法相同，但更加的灵活。可以直接用多个酶对片段进行循环处理，中间不用担心结果存放问题。

::

   %用BamHI剪切

   PCR_zheng=restrict_xia(PCR,'BamHI')

   PCR_zheng = 2×1 cell 数组

   'ACCACCATGGATGAAAATTAGACCACT…  
   'GATCCTGGT'  

   % 用NcoI剪切

   PCR_zheng=restrict_xia(PCR_zheng,'NcoI')

   PCR_zheng = 3×1 cell 数组

   'ACCAC'  
   'CATGGATGAAAATTAGACCACTTGGTG…  
   'GATCCTGGT'  
   %正链分析完毕

   %--------------------------------------------

对反链进行分析
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

具体过程同上，用法同matlab自带的restrict。

::

   

   PCR_c=seqcomplement(PCR) % PCR互补链

   PCR_c =
   'TGGTGGTACCTACTTTTAATCTGGTGAACCACTGTCTCAACAATAATTTTCTAATCTCCGTCTCCTCTGATGATTCTCGCCATATCATAATGGATCGAGTCGATTTCTCTTTGGAGTTTACCGTCTTCAACAACGTCATCCAGGACCACCTCAACATCTACCGTTTCTTTAAGTTTACGTTCATTTCTGTCCTCTATTTCATAAAAAGAGGTTTATGTCACCTTGTCTTTATTTTCAACTGTTACTTCTTAACAATTAAAATTCTGTCCTGCTATAAAATCCTTAACATCTTCTTATTCGATAGTTAAAACAATTATTAAGTCCCTCCCTAAGATTTACCGTTTCGTTTATAATATGCCTCTTCTTCGTTCTTCTAGATACGTTTTCCCGCATCTGTTTGAACGACTATGACAATTCCAATGAGAACCTGGTTTTCCTTCTTTACAACAAAATCTATTTTTTAAACCTCGTGGTGAATATTGTTTACTACCACATTCATATCGTTTTCTTTATCTTGAACTTCTAGGTATACTTTTATACCCACGTGTTGAACAATTCCTTCAACGTTGATTCTGATTACTACATCGTCCTCTGCCTTGATGATGTCGTTGTGAAGAACGTGTTCGTTATTATTCTCTTCCTGAATTTTTACAATGTCGACCTCGATTAGGTTACGAATATTCTTTACCTTATTCTAATCGACATCTATTCTGACAACTTCCTGAATTCTTTCATAGTTTCTTACAATTGCCTTTTCTTCTATATCGTTCTCAACGTAGTTAAAGTCGTCGTCTAGGACTTTATCCTTTTAATTATCGACTACGATACCTCTTTCATCCGTTGCTTCCTCAATATTGACAACTTCTTAGTTTTAGTTACCCTTGTCTTGAACTACAACAACTTCCATACGTTAAACTATCTCCTATAAATTCGGGTATGTACCATTGTCTAGTTCTCTTTTACCTTCGACATGAACTACTAGGTATATATAATTATTGTCTGTTCTTTTAACGTTTATATGTTCTTTAAGAAGGTGAAGAACTCGTCTATCAAGTTGTCCCATTTTTTAATGAATATTAACGACTACTACAACTTCCGCTTCGAAATCGATGTAACCAACAATTGTTTAATTCTCCTTGTAAATTGACACAACGACAATTTCGAGGACCTAAACCGCTATCTTCTTTTCTATACAATTCTCTGTATCGTTAGGAATGTCCACCTCTTCAATATAGTCTTCTCGAACCTTTTCTAGAATTTCTACATTTCCAACTCCTAGAACCTTCACGACTTTCGCAATTTTATAGTTTTCTTTTATGATGTTATCATTTACCTTCTCCGCTGTTCTCGCGTTAGGTACTGTCTCAACGCGTTTATTCTCCAGTTTATCTTCTTTGATGTAGACTGAAACTATCTCTTTTTAATGTTCTTTCTAATCGTTTTGAACGACCACCTCAACGTCAACAATTTCAACCTCGACGAAGTCTTTGACTTAATTTTCTCTCTTTTTACTCTTAACTTCTACGAGAACGTCGATGTTTTCGTCGTCAACTTCTTCCATATTAACGACCACCACCATGACGAATGTAGTTACATAATGGTCTTCATTCTCTTAACTGAAGTCTGCTTGGTCTACAAGTTCAACCATATTTATATTATCAATTCCGAGAACTTCTTGGTCATTCTGTTTATCGACGTTTACGTCCAGAACTCCCTAGTCATTATTATCTTTTTTAATATTTGTCACTTTTTCCTTAACCTAAACTACGTAATGTACTCTTTATACAACTATACGATTCACAACCTTAACAACTAGGTTGATTCCAATGTTCTAGTCGTGAAGTTTTACGCCGTAGTCAACGAAGTTGTAAGGAATGTTGACTCACGCGACATCGTCTATAAGGACTTTTTCTATTTGGACTTTACGGTCCACCTCGTGGTCCTTACCCTTACCCGCCTTACATGATTCCTAGGACCA'

   PCR_fan=restrict_xia(PCR_c,'CCTAGG',5); % BamHI酶解

   PCR_fan=restrict_xia(PCR_fan,'GGTACC',5) % NcoI酶解

   PCR_fan = 3×1 cell 数组

   'TGGTGGTAC'  
   'CTACTTTTAATCTGGTGAACCACTGTC…  
   'GACCA'  

对生成的片段进行组装
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

由于我们平时看到的均为两条链形式，我们对上面步骤的片段进行组装。整理成几段切割的片段，每段片段为两链形式，上链方向为5→3，下链为3→5

::

   %互补链分析完毕

   %-------------------------

   jieguo1=seqcombine_xia(PCR_zheng,PCR_fan) %进行序列组装

   jieguo1 = 2×3 cell 数组

   'ACCAC ' 'CATGGATGAAAATTAGACCACTTGGTG… 'GATCCTGGT'  
   'TGGTGGTAC' 'CTACTTTTAATCTGGTGAACCACTGTC… 'GACCA' 

对生成的片段进行分析
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

seqreport_xia可以直接给出生成的片段、粘性末端情况，并生成问题和图像两种报告形式。由于mlx文件无法运行鼠标交互，seqreport_xia无法直接运行。可在console进行运行，或邮件鼠标运行。

注明：seqreport_xia程序中，出现图片报告后，需要用鼠标选择文字标注所在的位置（gtext函数）

::

   % seqreport_xia(jieguo1) %生成序列报告

   %--------------------

   %以上PCR分析完毕

   %---------------------------------------------------------------------------------------

以下为相同分析（略过）
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

::

   %读入质粒正链序列

   zhili=fastaread('pET 28a(+).fasta');

   zhili=zhili.Sequence;

   % 用BamHI剪切

   zhi_zheng=restrict_xia(zhili,'BamHI')

   zhi_zheng = 2×1 cell 数组

   'ATCCGGATATAGTTCCTCCTTTCAGCA…  
   'GATCCGCGACCCATTTGCTGTCCACCA…  

   %用NcoI剪切

   zhili_zheng=restrict_xia(zhi_zheng,'NcoI')

   zhili_zheng = 3×1 cell 数组

   'ATCCGGATATAGTTCCTCCTTTCAGCA…  
   'GATCCGCGACCCATTTGCTGTCCACCA…  
   'CATGGTATATCTCCTTCTTAAAGTTAA…  

   %正链分析完毕

   %--------------------------------------------

   zhili_c=seqcomplement(zhili) % PCR互补链

   zhili_c =
   'TAGGCCTATATCAAGGAGGAAAGTCGTTTTTTGGGGAGTTCTGGGCAAATCTCCGGGGTTCCCCAATACGATCAATAACGAGTCGCCACCGTCGTCGGTTGAGTCGAAGGAAAGCCCGAAACAATCGTCGGCCTAGAGTCACCACCACCACCACCACGAGCTCACGCCGGCGTTCGAACAGCTGCCTCGAGCTTAAGCCTAGGCGCTGGGTAAACGACAGGTGGTCAGTACGATCGGTATACCGACGGCGCGCCGTGGTCCGGCGACGACACTACTACTACTACTACCGACGACGGGTACCATATAGAGGAAGAATTTCAATTTGTTTTAATAAAGATCTCCCCTTAACAATAGGCGAGTGTTAAGGGGATATCACTCAGCATAATTAAAGCGCCCTAGCTCTAGAGCTAGGAGATGCGGCCTGCGTAGCACCGGCCGTAGTGGCCGCGGTGTCCACGCCAACGACCGCGGATATAGCGGCTGTAGTGGCTACCCCTTCTAGCCCGAGCGGTGAAGCCCGAGTACTCGCGAACAAAGCCGCACCCATACCACCGTCCGGGGCACCGGCCCCCTGACAACCCGCGGTAGAGGAACGTACGTGGTAAGGAACGCCGCCGCCACGAGTTGCCGGAGTTGGATGATGACCCGACGAAGGATTACGTCCTCAGCGTATTCCCTCTCGCAGCTCTAGGGCCTGTGGTAGCTTACCGCGTTTTGGAAAGCGCCATACCGTACTATCGCGGGCCTTCTCTCAGTTAAGTCCCACCACTTACACTTTGGTCATTGCAATATGCTACAGCGTCTCATACGGCCACAGAGAATAGTCTGGCAAAGGGCGCACCACTTGGTCCGGTCGGTGCAAAGACGCTTTTGCGCCCTTTTTCACCTTCGCCGCTACCGCCTCGACTTAATGTAAGGGTTGGCGCACCGTGTTGTTGACCGCCCGTTTGTCAGCAACGACTAACCGCAACGGTGGAGGTCAGACCGGGACGTGCGCGGCAGCGTTTAACAGCGCCGCTAATTTAGAGCGCGGCTAGTTGACCCACGGTCGCACCACCACAGCTACCATCTTGCTTCGCCGCAGCTTCGGACATTTCGCCGCCACGTGTTAGAAGAGCGCGTTGCGCAGTCACCCGACTAGTAATTGATAGGCGACCTACTGGTCCTACGGTAACGACACCTTCGACGGACGTGATTACAAGGCCGCAATAAAGAACTACAGAGACTGGTCTGTGGGTAGTTGTCATAATAAAAGAGGGTACTTCTGCCATGCGCTGACCCGCACCTCGTAGACCAGCGTAACCCAGTGGTCGTTTAGCGCGACAATCGCCCGGGTAATTCAAGACAGAGCCGCGCAGACGCAGACCGACCGACCGTATTTATAGAGTGAGCGTTAGTTTAAGTCGGCTATCGCCTTGCCCTTCCGCTGACCTCACGGTACAGGCCAAAAGTTGTTTGGTACGTTTACGACTTACTCCCGTAGCAAGGGTGACGCTACGACCAACGGTTGCTAGTCTACCGCGACCCGCGTTACGCGCGGTAATGGCTCAGGCCCGACGCGCAACCACGCCTATAGAGCCATCACCCTATGCTGCTATGGCTTCTGTCGAGTACAATATAGGGCGGCAATTGGTGGTAGTTTGTCCTAAAAGCGGACGACCCCGTTTGGTCGCACCTGGCGAACGACGTTGAGAGAGTCCCGGTCCGCCACTTCCCGTTAGTCGACAACGGGCAGAGTGACCACTTTTCTTTTTGGTGGGACCGCGGGTTATGCGTTTGGCGGAGAGGGGCGCGCAACCGGCTAAGTAATTACGTCGACCGTGCTGTCCAAAGGGCTGACCTTTCGCCCGTCACTCGCGTTGCGTTAATTACATTCAATCGAGTGAGTAATCCGTGGCCCTAGAGCTGGCTACGGGAACTCTCGGAAGTTGGGTCAGTCGAGGAAGGCCACCCGCGCCCCGTACTGATAGCAGCGGCGTGAATACTGACAGAAGAAATAGTACGTTGAGCATCCTGTCCACGGCCGTCGCGAGACCCAGTAAAAGCCGCTCCTGGCGAAAGCGACCTCGCGCTGCTACTAGCCGGACAGCGAACGCCATAAGCCTTAGAACGTGCGGGAGCGAGTTCGGAAGCAGTGACCAGGGCGGTGGTTTGCAAAGCCGCTCTTCGTCCGGTAATAGCGGCCGTACCGCCGGGGTGCCCACGCGTACTAGCACGAGGACAGCAACTCCTGGGCCGATCCGACCGCCCCAACGGAATGACCAATCGTCTTACTTAGTGGCTATGCGCTCGCTTGCACTTCGCTGACGACGACGTTTTGCAGACGCTGGACTCGTTGTTGTACTTACCAGAAGCCAAAGGCACAAAGCATTTCAGACCTTTGCGCCTTCAGTCGCGGGACGTGGTAATACAAGGCCTAGACGTAGCGTCCTACGACGACCGATGGGACACCTTGTGGATGTAGACATAATTGCTTCGCGACCGTAACTGGGACTCACTAAAAAGAGACCAGGGCGGCGTAGGTATGGCGGTCAACAAATGGGAGTGTTGCAAGGTCATTGGCCCGTACAAGTAGTAGTCATTGGGCATAGCACTCGTAGGAGAGAGCAAAGTAGCCATAGTAATGGGGGTACTTGTCTTTAGGGGGAATGTGCCTCCGTAGTCACTGGTTTGTCCTTTTTTGGCGGGAATTGTACCGGGCGAAATAGTCTTCGGTCTGTAATTGCGAAGACCTCTTTGAGTTGCTCGACCTGCGCCTACTTGTCCGTCTGTAGACACTTAGCGAAGTGCTGGTGCGACTACTCGAAATGGCGTCGACGGAGCGCGCAAAGCCACTACTGCCACTTTTGGAGACTGTGTACGTCGAGGGCCTCTGCCAGTGTCGAACAGACATTCGCCTACGGCCCTCGTCTGTTCGGGCAGTCCCGCGCAGTCGCCCACAACCGCCCACAGCCCCGCGTCGGTACTGGGTCAGTGCATCGCTATCGCCTCACATATGACCGAATTGATACGCCGTAGTCTCGTCTAACATGACTCTCACGTGGTATATACGCCACACTTTATGGCGTGTCTACGCATTCCTCTTTTATGGCGTAGTCCGCGAGAAGGCGAAGGAGCGAGTGACTGAGCGACGCGAGCCAGCAAGCCGACGCCGCTCGCCATAGTCGAGTGAGTTTCCGCCATTATGCCAATAGGTGTCTTAGTCCCCTATTGCGTCCTTTCTTGTACACTCGTTTTCCGGTCGTTTTCCGGTCCTTGGCATTTTTCCGGCGCAACGACCGCAAAAAGGTATCCGAGGCGGGGGGACTGCTCGTAGTGTTTTTAGCTGCGAGTTCAGTCTCCACCGCTTTGGGCTGTCCTGATATTTCTATGGTCCGCAAAGGGGGACCTTCGAGGGAGCACGCGAGAGGACAAGGCTGGGACGGCGAATGGCCTATGGACAGGCGGAAAGAGGGAAGCCCTTCGCACCGCGAAAGAGTATCGAGTGCGACATCCATAGAGTCAAGCCACATCCAGCAAGCGAGGTTCGACCCGACACACGTGCTTGGGGGGCAAGTCGGGCTGGCGACGCGGAATAGGCCATTGATAGCAGAACTCAGGTTGGGCCATTCTGTGCTGAATAGCGGTGACCGTCGTCGGTGACCATTGTCCTAATCGTCTCGCTCCATACATCCGCCACGATGTCTCAAGAACTTCACCACCGGATTGATGCCGATGTGATCTTCCTGTCATAAACCATAGACGCGAGACGACTTCGGTCAATGGAAGCCTTTTTCTCAACCATCGAGAACTAGGCCGTTTGTTTGGTGGCGACCATCGCCACCAAAAAAACAAACGTTCGTCGTCTAATGCGCGTCTTTTTTTCCTAGAGTTCTTCTAGGAAACTAGAAAAGATGCCCCAGACTGCGAGTCACCTTGCTTTTGAGTGCAATTCCCTAAAACCAGTACTTGTTATTTTGACAGACGAATGTATTTGTCATTATGTTCCCCACAATACTCGGTATAAGTTGCCCTTTGCAGAACGAGATCCGGCGCTAATTTAAGGTTGTACCTACGACTAAATATACCCATATTTACCCGAGCGCTATTACAGCCCGTTAGTCCACGCTGTTAGATAGCTAACATACCCTTCGGGCTACGCGGTCTCAACAAAGACTTTGTACCGTTTCCATCGCAACGGTTACTACAATGTCTACTCTACCAGTCTGATTTGACCGACTGCCTTAAATACGGAGAAGGCTGGTAGTTCGTAAAATAGGCATGAGGACTACTACGTACCAATGAGTGGTGACGCTAGGGGCCCTTTTGTCGTAAGGTCCATAATCTTCTTATAGGACTAAGTCCACTTTTATAACAACTACGCGACCGTCACAAGGACGCGGCCAACGTAAGCTAAGGACAAACATTAACAGGAAAATTGTCGCTAGCGCATAAAGCAGAGCGAGTCCGCGTTAGTGCTTACTTATTGCCAAACCAACTACGCTCACTAAAACTACTGCTCGCATTACCGACCGGACAACTTGTTCAGACCTTTCTTTACGTATTTGAAAACGGTAAGAGTGGCCTAAGTCAGCAGTGAGTACCACTAAAGAGTGAACTATTGGAATAAAAACTGCTCCCCTTTAATTATCCAACATAACTACAACCTGCTCAGCCTTAGCGTCTGGCTATGGTCCTAGAACGGTAGGATACCTTGACGGAGCCACTCAAAAGAGGAAGTAATGTCTTTGCCGAAAAAGTTTTTATACCATAACTATTAGGACTATACTTATTTAACGTCAAAGTAAACTACGAGCTACTCAAAAAGATTCTTAATTAAGTACTCGCCTATGTATAAACTTACATAAATCTTTTTATTTGTTTATCCCCAAGGCGCGTGTAAAGGGGCTTTTCACGGTGGACTTTAACATTTGCAATTATAAAACAATTTTAAGCGCAATTTAAAAACAATTTAGTCGAGTAAAAAATTGGTTATCCGGCTTTAGCCGTTTTAGGGAATATTTAGTTTTCTTATCTGGCTCTATCCCAACTCACAACAAGGTCAAACCTTGTTCTCAGGTGATAATTTCTTGCACCTGAGGTTGCAGTTTCCCGCTTTTTGGCAGATAGTCCCGCTACCGGGTGATGCACTTGGTAGTGGGATTAGTTCAAAAAACCCCAGCTCCACGGCATTTCGTGATTTAGCCTTGGGATTTCCCTCGGGGGCTAAATCTCGAACTGCCCCTTTCGGCCGCTTGCACCGCTCTTTCCTTCCCTTCTTTCGCTTTCCTCGCCCGCGATCCCGCGACCGTTCACATCGCCAGTGCGACGCGCATTGGTGGTGTGGGCGGCGCGAATTACGCGGCGATGTCCCGCGCAGGGTAAGCGGT'

   zhili_fan=restrict_xia(zhili_c,'CCTAGG',5); % BamHI酶解
   zhili_fan=restrict_xia(zhili_fan,'GGTACC',5) % NcoI酶解
   zhili_fan = 3×1 cell 数组

   'TAGGCCTATATCAAGGAGGAAAGTCGT…  
   'GCGCTGGGTAAACGACAGGTGGTCAGT…  
   'CATATAGAGGAAGAATTTCAATTTGTT…  

   %反链分析完毕

   %-------------------------

   jieguo2=seqcombine_xia(zhili_zheng,zhili_fan) %进行序列组装

   jieguo2 = 2×3 cell 数组

   'ATCCGGATATAGTTCCTCCTTTCAGCA… 'GATCCGCGACCCATTTGCTGTCCACCA…
   'CATGGTATATCTCCTTCTTAAAGTTAA…  
   'TAGGCCTATATCAAGGAGGAAAGTCGT… 'GCGCTGGGTAAACGACAGGTGGTCAGT…
   'CATATAGAGGAAGAATTTCAATTTGTT…  

   % seqreport_xia(jieguo2) %生成分析报告

   % 以上质粒分析完毕！

对粘性末端进行拼接
--------------------------------------

首先对末端进行提取
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

说明：

为了用字母表征粘性末端，我们独创了一种方法：如 ‘LP-CATG-RB-
CTAG’，其中L和R分别表示左端和右端，P(top)和B(bottom)分别表示末端位于上链还是下链。

::

   ends1=endsget_xia(jieguo1)
   ends1 = 1×3 cell 数组

   'RB-GTAC' 'LP-CATG-RB-CTAG' 'LP-GATC'  

   ends2=endsget_xia(jieguo2)

   ends2 = 1×3 cell 数组

   'RB-CTAG' 'LP-GATC-RB-GTAC' 'LP-CATG'  

建立末端数据库
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

提取各个片段的末端
~~~~~~~~~~~~~~~~~~

特别需要注意的是：由于编程中，习惯将上链表示为正链，下链为反方向。所以，如果粘性末端位于反链，则对其进行求补（即标准化）。endextract_xia可以从末段中提取末端，并根据所在位置（上链还是下链，进行标准化）

::

   ends_extracted=endextract_xia([ends1,ends2]) % endextract_xia已经包含了标准化操作

   ends_extracted = 1×8 cell 数组

   'CATG' 'CATG' 'GATC' 'GATC' 'GATC' 'GATC' 'CATG' 'CATG'  

对末端进行去重，构建数据库
~~~~~~~~~~~~~~~~~~~~~~~~~~

::

   ends_num=unique(ends_extracted) %利用unique进行去重

   ends_num = 1×2 cell 数组

   'CATG' 'GATC'  

将片段末端进行数字化处理
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

将末端转化为数字
~~~~~~~~~~~~~~~~

1）ends_num为2.2.2中数据库中的粘性末端。其编号及2.2.2中末端在cell中的位置

2）endnumbered_xia将待分析DNA片段的末端进行编号化处理。其中0表示平头端。12表示该左端为数据库中第一个粘性末端，2该片段右端为数据库的第二个粘性末端

::

   [endnumbered1] = endnumbered_xia([ends1,ends2],ends_num)% 正向序列

   endnumbered1 = 1×6 cell 数组

   '01' '12' '20' '02' '21' '10'  

3）片段可能有翻转的情况，把该种情况也加入进来。因此，一个片段包含两种状态：正向和反向。其编号对应着endnumbered中所在位置。

::

   endnumbered2=cellfun(@fliplr,endnumbered1,'UniformOutput',false);

   endnumbered=[endnumbered1,endnumbered2]

   endnumbered = 1×12 cell 数组

   '01' '12' '20' '02' '21' '10' '10' '21' '02' '20' '12' '01'  

进行分子对接实验
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

制定对接规则
~~~~~~~~~~~~

可以根据自己实际需要，选择对接的规则，并将其放在paris中

::

   % 比如，我们这次实验，根据实际情况可知，只有2和5有可能反复重复，假设可以重复3次

   pairs=nchoosek(repmat([2,5,8,11],1,3),3);

   % paris可以自由规定

计算可能的对接结果
~~~~~~~~~~~~~~~~~~

根据以上分析，我们构建了一套考察分子连接的方法：

1）只有相同的末端，才能够连接，如{0,1},{1,2}带有这种末端的两个片段可以链接，因为其有共同的末端2

2）链接片段中，除首末端外，中间不允许出现0，因为0无法与其他进行链接；

3）最后对生成的结果进行去重；

::

   seqpairs=unique(seqsprlinks_xia(endnumbered,pairs),'rows')

   seqpairs = 16×3

   2 5 2
   2 5 11
   2 8 2 
   2 8 11 
   5 2 5 
   5 2 8 
   5 11 5 
   5 11 8 
   8 2 5 
   8 2 8


.. raw:: html

   <script>
	window.onload = function(){	
		var oMessageBox = document.getElementById("messageBox");
		var oInput = document.getElementById("myInput");
		var oPostBtn = document.getElementById("doPost");
		
		oPostBtn.onclick = function(){
			if(oInput.value){
				//写入发表留言的时间
				var oTime = document.createElement("div");
				oTime.className = "time";
				var myDate = new  Date();
				oTime.innerHTML = myDate.toLocaleString();
				oMessageBox.appendChild(oTime);
				
				//写入留言内容
				var oMessageContent = document.createElement("div");
				oMessageContent.className = "message_content";
				oMessageContent.innerHTML = oInput.value;
				oInput.value = "";
				oMessageBox.appendChild(oMessageContent);
			}
			
		}
		
	}

   </script>


   <div class="content">
        <div class="title">用户留言</div>
        <div class="message_box" id="messageBox"></div>
        <div><input id="myInput" type="text" placeholder="请输入留言类容"><button id="doPost">提交</button></div>
    </div>


.. raw:: html

       <script type="text/javascript">
        var caution=false
        function setCookie(name,value,expires,path,domain,secure)
        {
            var curCookie=name+"="+escape(value) +
                ((expires)?";expires="+expires.toGMTString() : "") +
                ((path)?"; path=" + path : "") +
                ((domain)? "; domain=" + domain : "") +
                ((secure)?";secure" : "")
            if(!caution||(name + "=" + escape(value)).length <= 4000)
            {
                document.cookie = curCookie
            }
            else if(confirm("Cookie exceeds 4KB and will be cut!"))
            {
                document.cookie = curCookie
            }
        }
        function getCookie(name)
        {
            var prefix = name + "="
            var cookieStartIndex = document.cookie.indexOf(prefix)
            if (cookieStartIndex == -1)
            {
                return null
            }
            var cookieEndIndex=document.cookie.indexOf(";",cookieStartIndex+prefix.length)
            if(cookieEndIndex == -1)
            {
                cookieEndIndex = document.cookie.length
            }
            return unescape(document.cookie.substring(cookieStartIndex+prefix.length,cookieEndIndex))
        }
        function deleteCookie(name, path, domain)
        {
            if(getCookie(name))
            {
                document.cookie = name + "=" +
                    ((path) ? "; path=" + path : "") +
                    ((domain) ? "; domain=" + domain : "") +
                    "; expires=Thu, 01-Jan-70 00:00:01 GMT"
            }
        }
        function fixDate(date)
        {
            var base=new Date(0)
            var skew=base.getTime()
            if(skew>0)
            {
                date.setTime(date.getTime()-skew)
            }
        }
        var now=new Date()
        fixDate(now)
        now.setTime(now.getTime()+365 * 24 * 60 * 60 * 1000)
        var visits = getCookie("counter")
        if(!visits)
        {
            visits=1;
        }
        else
        {
            visits=parseInt(visits)+1;
        }
        setCookie("counter", visits, now)
		if(visits<1010){
		visits=1001
		}
        document.write("<center><b>您是到访的第" + visits + "位用户！</b></center>")
    </script>
